/**
 * locator - In browser locator map generator
 * @version v0.0.1
 * @link https://github.com/datanews/locator#readme
 * @license MIT
 */
!function(){"use strict";var t=function(t){this.options=_.extend({},{template:' <div class="locator">  <section class="locator-display">  <div class="locator-map-wrapper">  <div class="locator-map"></div>  </div>  </section>   <section class="locator-controls">  <header>Locator</header>   <div class="locator-input">  <div class="config-option">  <label>Marker label</label>  <input type="text" placeholder="Marker label" value="{{ options.markerText }}" lazy>  </div>   {{^options.geocoder}}  <div class="config-option">  <label>Latitude and longitude location</label>   <br><input type="number" placeholder="Latitude" value="{{ options.lat }}" lazy>  <br><input type="number" placeholder="Longitude" value="{{ options.lng }}" lazy>  </div>  {{/options.geocoder}}   {{#options.geocoder}}  <div class="config-option">  <label>Search location by address</label>  <input type="text" placeholder="Address or place" value="{{ geocodeInput }}" lazy disabled="{{ isGeocoding }}">  </div>  {{/options.geocoder}}   {{#(_.size(options.tilesets))}}  <div class="config-option config-select">  <label>Background map set</label>   <select value="{{ options.tileset }}">  {{#options.tilesets:i}}  <option value="{{ i }}">{{ i }}</option>  {{/options.tilesets}}  </select>  </div>  {{/()}}   {{#(_.size(options.widths))}}  <div class="config-option config-select">  <label>Map width</label>   <select value="{{ options.width }}">  {{#options.widths:i}}  <option value="{{ i }}">{{ i }}</option>  {{/options.widths}}  </select>  </div>  {{/()}}   {{#(_.size(options.ratios))}}  <div class="config-option config-select">  <label>Map aspect ratio</label>   <select value="{{ options.ratio }}">  {{#options.ratios:i}}  <option value="{{ i }}">{{ i }}</option>  {{/options.ratios}}  </select>  </div>  {{/()}}   <div class="config-option">  <label>Mini-map zoom</label>   <input type="range" min="-10" max="1" value="{{ options.miniZoomOffset }}" title="Adjust zoom level for map">  </div>   <div class="config-action">  <button class="generate-image" on-click="generate">Generate</button>  </div>   <div class="preview">  <h1>Preview</h1>  <img src="" /><br>  <a href="" class="download-link">Download</a>  </div>  </div>   <footer>  <p>Made by WNYC</p>  </footer>  </section> </div> ',tilesets:{"Mapbox Streets":"http://a.tiles.mapbox.com/v3/jkeefe.np44bm6o/{z}/{x}/{y}.png","Stamen Toner":"http://tile.stamen.com/toner/{z}/{x}/{y}.png"},tileset:"Mapbox Streets",zoom:17,lat:40.74844,lng:-73.98566,minZoom:1,maxZoom:18,miniWidth:"15w",miniHeight:"15w",miniZoomOffset:-6,miniExtentStyles:{fill:!1,stroke:!0,color:"#000000",opacity:.9,weight:4},miniStyles:{backgroundColor:"#FFFFFF",padding:3,shadow:!0,shadowColor:"rgba(0, 0, 0, 0.65)",shadowBlur:5,shadowOffsetX:1,shadowOffsetY:1},markerText:"Empire State Building",markerBackground:"rgba(0, 0, 0, 0.9)",markerForeground:"rgba(255, 255, 255, 0.9)",markerRadius:5,markerFontSize:16,markerFont:'"Open Sans", Helvetica, Arial, sans-serif',markerLabelDistance:20,markerLabelWidth:3,markerPadding:10,widths:{"400px":400,"600px":600,"800px":800},width:"600px",ratios:{"1:1":1,"4:3":4/3,"16:9":16/9},ratio:"4:3",geocoder:this.defaultGeocoder},t),this.id=_.uniqueId("locator-"),this.el=this.options.el,this.drawInterface()};_.extend(t.prototype,{drawInterface:function(){var t=_.clone(this.options);this["interface"]=new Ractive({el:this.options.el,template:this.options.template,data:{options:this.options,isGeocoding:!1,geocodeInput:"",_:_}}),this["interface"].on("generate",_.bind(this.generate,this)),this.throttledDrawMaps=_.throttle(_.bind(this.drawMaps,this),1500),_.isFunction(this.options.geocoder)&&(this.throttledGeocoder=_.throttle(_.bind(this.options.geocoder,this),1500)),this["interface"].observe("options",_.bind(function(i){var o=i.lat!==t.lat||i.lng!==t.lng;this.throttledDrawMaps(o),t=_.clone(i)},this),{init:!1}),this["interface"].observe("geocodeInput",_.bind(function(t){_.isFunction(this.throttledGeocoder)&&this.throttledGeocoder(t,_.bind(function(t,i){this.options.lat=t,this.options.lng=i,this.throttledDrawMaps(!0)},this))},this),{init:!1}),this.drawMaps()},drawMaps:function(t){this.drawMap(t),this.drawMarker(),this.drawMinimap()},drawMap:function(t){t=t||!1;var i,o,e,n=this.getEl(".locator-map");n.id=this.id+"-map",e=[this.options.lat,this.options.lng,this.options.zoom],this.map&&!t?(e[0]=this.map.getCenter().lat,e[1]=this.map.getCenter().lng,e[2]=this.map.getZoom(),this.map.remove()):this.map&&this.map.remove(),i=_.size(this.options.widths)?this.options.widths[this.options.width]:n.getBoundingClientRect().width,o=_.size(this.options.ratios)?i/this.options.ratios[this.options.ratio]:n.getBoundingClientRect().height,n.style.width=i+"px",n.style.height=o+"px",this.map=new L.Map(n.id,{minZoom:this.options.minZoom,maxZoom:this.options.maxZoom,attributionControl:!1}),this.map.setView([e[0],e[1]],e[2]),this.mapLayer=new L.TileLayer(this.options.tilesets[this.options.tileset]),this.map.addLayer(this.mapLayer)},drawMinimap:function(){var t,i=this.getEl(".locator-map").getBoundingClientRect().width,o=this.getEl(".locator-map").getBoundingClientRect().height,e=_.isNumber(this.options.miniWidth)?this.options.miniWidth:-1!==this.options.miniWidth.indexOf("w")?+this.options.miniWidth.replace("w","")/100*i:+this.options.miniWidth.replace("h","")/100*o,n=_.isNumber(this.options.miniHeight)?this.options.miniHeight:-1!==this.options.miniHeight.indexOf("w")?+this.options.miniHeight.replace("w","")/100*i:+this.options.miniHeight.replace("h","")/100*o;this.minimapLayer=new L.TileLayer(this.options.tilesets[this.options.tileset]),this.miniMap=new L.Control.MiniMap(this.minimapLayer,{width:e,height:n,zoomLevelOffset:this.options.miniZoomOffset,aimingRectOptions:{fill:!1,stroke:!1}}),this.map.addControl(this.miniMap),this.miniMap._miniMap.addLayer(this.drawMiniCanvasLayer(this.options.miniExtentStyles)),t=this.getEl(".locator-map .leaflet-control-minimap"),_.each(this.miniStylesToCSS(this.options.miniStyles),function(i,o){t.style[o]=i})},drawMiniCanvasLayer:function(t){return this.miniCanvasLayer=L.tileLayer.canvas(),this.miniCanvasLayer.drawTile=_.bind(function(i,o,e){var n=i.getContext("2d");n.clearRect(0,0,i.width,i.height);var s={};s.nwPoint=o.multiplyBy(256),s.sePoint=s.nwPoint.add(new L.Point(256,256)),s.nwCoord=this.map.unproject(s.nwPoint,e,!0),s.seCoord=this.map.unproject(s.sePoint,e,!0),s.bCoord=L.latLngBounds([[s.nwCoord.lat,s.seCoord.lng],[s.seCoord.lat,s.nwCoord.lng]]),s.bPoint=[s.nwPoint,s.sePoint];var a=this.map.getBounds(),l=this.map.project(a.getNorthWest(),e,!0),r=this.map.project(a.getSouthEast(),e,!0);n.beginPath(),n.rect(l.x-s.nwPoint.x,l.y-s.nwPoint.y,r.x-l.x,r.y-l.y),n=this.leafletStylesToCanvas(t,n),n.closePath()},this),this.map.on("moveend",_.bind(function(){this.miniCanvasLayer.redraw()},this)),this.miniCanvasLayer},drawMarker:function(){this.markerCanvas=L.tileLayer.canvas(),this.markerCanvas.drawTile=_.bind(this.drawMarkerTile,this),this.markerCanvas.addTo(this.map)},drawMarkerTile:function(t,i,o){var e,n,s,a=t.getContext("2d"),l=.75*this.options.markerFontSize+2*this.options.markerPadding;a.clearRect(0,0,t.width,t.height);var r={};r.nwPoint=i.multiplyBy(256),r.sePoint=r.nwPoint.add(new L.Point(256,256)),r.nwCoord=this.map.unproject(r.nwPoint,o,!0),r.seCoord=this.map.unproject(r.sePoint,o,!0),r.bCoord=L.latLngBounds([[r.nwCoord.lat,r.seCoord.lng],[r.seCoord.lat,r.nwCoord.lng]]),r.bPoint=[r.nwPoint,r.sePoint],r.locCoord=L.latLng(this.options.lat,this.options.lng),r.locPoint=this.map.project(r.locCoord,o,!0),e={x:r.locPoint.x-r.nwPoint.x,y:r.locPoint.y-r.nwPoint.y},a.beginPath(),a.fillStyle=this.options.markerBackground,a.fillRect(e.x-this.options.markerRadius,e.y-this.options.markerRadius,2*this.options.markerRadius,2*this.options.markerRadius),a.closePath(),a.beginPath(),a.fillStyle=this.options.markerBackground,a.fillRect(e.x-this.options.markerLabelWidth/2,e.y-this.options.markerRadius-this.options.markerLabelDistance,this.options.markerLabelWidth,this.options.markerLabelDistance),a.closePath(),a.beginPath(),a.font=this.options.markerFontSize+"px "+this.options.markerFont,a.fillStyle=this.options.markerForeground,a.textAlign="center",n=a.measureText(this.options.markerText).width,s=n+2*this.options.markerPadding,a.closePath(),a.beginPath(),a.fillStyle=this.options.markerBackground,a.fillRect(e.x-s/2,e.y-this.options.markerRadius-this.options.markerLabelDistance-l,s,l),a.closePath(),a.beginPath(),a.font=this.options.markerFontSize+"px "+this.options.markerFont,a.fillStyle=this.options.markerForeground,a.textAlign="center",a.fillText(this.options.markerText,e.x,e.y-this.options.markerRadius-this.options.markerLabelDistance-this.options.markerPadding),a.closePath()},generate:function(){this.getEl(".locator-map .leaflet-control-zoom").style.display="none",this.getEl(".locator-map .leaflet-control-minimap").style.display="none",html2canvas(this.getEl(".locator-map"),{useCORS:!0,onrendered:_.bind(function(t){this.getEl(".locator-map .leaflet-control-zoom").style.display="block",this.getEl(".locator-map .leaflet-control-minimap").style.display="block",html2canvas(this.getEl(".locator-map .leaflet-control-minimap"),{useCORS:!0,onrendered:_.bind(function(i){var o=this.drawCanvasMiniMap(t,i);this.preview(o),this["export"](o)},this)})},this)})},drawCanvasMiniMap:function(t,i){var o=t.getContext("2d"),e=this.getEl(".locator-map .leaflet-control-minimap"),n=e.getBoundingClientRect().width,s=e.getBoundingClientRect().height,a=this.options.miniStyles,l=10,r=10;return o.beginPath(),o.fillStyle=a.backgroundColor,a.shadow&&(o.shadowColor=a.shadowColor,o.shadowBlur=a.shadowBlur,o.shadowOffsetX=a.shadowOffsetX,o.shadowOffsetY=a.shadowOffsetY),o.fillRect(o.canvas.width-l-n-2*a.padding,o.canvas.height-r-s-2*a.padding,n+2*a.padding,s+2*a.padding),o.closePath(),o.beginPath(),o.shadowColor=0,o.shadowBlur=0,o.shadowOffsetX=0,o.shadowOffsetY=0,o.drawImage(i,o.canvas.width-l-n-a.padding,o.canvas.height-r-s-a.padding,n,s),o.closePath(),o},preview:function(t){this.getEl(".preview img").src=t.canvas.toDataURL(),this.getEl(".preview").style.display="block"},"export":function(t){var i=this.getEl(".download-link");i.href=t.canvas.toDataURL(),i.download=_.uniqueId("locator_image-")+".png"},getEl:function(t){return document.querySelector(this.el+" "+t)},miniStylesToCSS:function(t){var i={"background-color":t.backgroundColor,border:t.padding+"px solid "+t.backgroundColor};return t.shadow&&(i["box-shadow"]=t.shadowOffsetX+"px "+t.shadowOffsetY+"px "+t.shadowBlur+"px "+t.shadowColor),i},leafletStylesToCanvas:function(t,i){return t.fill&&(i.globalAlpha=t.fillOpacity||1,i.fillStyle=t.fillColor||t.color,i.fill(t.fillRule||"evenodd")),t.stroke&&0!==t.weight&&(i.globalAlpha=t.opacity||1,i.strokeStyle=t.color,i.lineCap=t.lineCap,i.lineJoin=t.lineJoin,i.stroke()),i},defaultGeocoder:function(t,i){var o=new XMLHttpRequest,e="https://maps.googleapis.com/maps/api/geocode/json?address="+encodeURIComponent(t),n=_.once(i);o.onreadystatechange=function(){var t;200===o.status&&o.responseText&&(t=JSON.parse(o.responseText),t&&t.results&&t.results.length&&n(t.results[0].geometry.location.lat,t.results[0].geometry.location.lng))},o.open("GET",e),o.send()}}),window.Locator=t}();